<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[我为何“恋”上一席]]></title>
      <url>%2F2017%2F03%2F08%2FYiXi%2F</url>
      <content type="text"><![CDATA[人文、科技、白日梦这是《一席》一直以来的口号或主题，作为国内的一家独立文化传播媒体，鼓励分享见解、体验和对未来的想象。“听君一席话，胜读十年书。”是她的全部含义。通过每月在全国各大城市举办线下演讲分享会，来传播有价值的思想和经历，迄今已经在北京、上海、香港、台北、广州、深圳等举办数十场活动。 他们如果说《一席》是由“他们”全部组成的，那么他们有一部分就是一席观众，另外一部分就是一席讲者。他们是各行业中的精英；或是在各自领域中执着坚持的工匠人；或是在创业路上逆风前行的创业者；亦或是独特创新的艺术工作者；亦或是敢于想象，勇于践行的冒险家…..（当然站在一席上的人是不会把自己标榜成“什么家”的）。如果说你是一个内心追求独立，向往自由，有勇于追寻自己梦想的人，但却总受阻于现实生活。在《一席》你或许能得到些许勇气，不一定就从此改变所有人，但一定让一些暂时止步的人们一点走下去的勇气。哪怕只是一步而已，也许下一步就是他们的春天。 他们大多数人看起来是那么普通，就跟路人甲一样普通，但就是因为在这普通的外表下，他们有的比别人多一份勇气，有的多一份坚持，有的多一份认真，或是多一份思考，多一份真诚…..这已足够让他们站在台上。在《一席》你能够听到关于理想的故事，关于乌托邦的所有美好，关于现实的不平，关于青春，关于艺术，关于生命，关于文化，当然还有抨击，批评和反省思考。我一直觉得《一席》的主题写得太好了“人文，科技，白日梦”，我们整个社会的发展不正是靠这３个方面吗？不但如此，过去、现在、未来都离不开这些。 一座城，一群人喜欢《一席》的人至少都是愿意接受新事物的人，有想法并愿意发现生活的人。不然为什么在茫茫人群里，你却发现了《一席》（暗自偷笑吧！） 去过《一席》现场的人才会知道，几乎所有人都心怀着期待和尊敬，等待收获一份来自别人生活的分享，那不是刻意教唆和煽动。这些生活的勇敢者让台下的一群人感觉亲切，真实和感动。我曾为有幸成为现场观众，而不惜从一个城市去到另外一个城市去参加，当然那时《一席》还免费。之后又参加了广州的首次一席演讲，那是我参加过坐着时间最长的一次活动，从下午１点一直持续到晚上８点，这当然不是吐槽，而是一次极其有趣的经历。整个活动我们有感动，有思考，有欢笑，也有兴奋，现在回想都觉得意犹未尽。城市里的人大多都是孤独的，我们还好因为《一席》而有机会为同一个兴趣聚在一起。 城市里有太多的虚幻的欢声笑语，闪烁辉煌的灯光，充满浮夸而不真实的人和物．．．让太多人看似表面丰富实则内心空虚，但却无力改变。也许有人会说：你喜欢《一席》不也是因为孤独吗？有什么资格说别人！其实孤独并不可怕，有太多优秀的人都是孤独的，但他们坚信终究会有人一起同行。可怕的因为孤独而把自己陷入不可自拔的虚幻生活。 越是缺乏就越用力装的人总是活得辛苦的。 关于独立思考其实每当想起这个话题，总觉得自己特没有资格来说，因为自己本就谈不上独立的人，说真要想发表一些见解视乎就是个笑话。但至少我还知道这是自己最缺的和最重要的一种思考方式。在“老树画画”那一期我似乎窥探到了一丝丝关于独立思考的光线。在现实中，你所谓“独立”就像是带刺的玫瑰，它看上去艳丽美好，但总避免不了会让自己受伤流血。因为总会有一群人他们标榜着普世价值观的代表者，把所有他们认为不正常的，仅仅是因为他们认为不正常的东西暴力地摧毁。那对于那些极其容易被煽动，缺乏了解便马上否定的人们，我们就知道“独立思考”于这个社会太TM重要了。最常见的在每一则网络新闻中，总会有一群被称为“喷子”的人，在留言区中你永远不用太关注他们所说的，因为都是一样的，他们意见一致，观点坚定，而且还不能容忍别人的意见，但却永远给不出理由，不然就是人云亦云。如果每个人都尊重意见，并坚持独特见解，对于问题将不止是问题，更多的是思考。收益的将是所有人，这该多好。(下面附) “老树画画”-做一个梦 2014-03-02上海（视频链接）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Github Pages + Hexo搭建个人博客全攻略NO.3]]></title>
      <url>%2F2017%2F02%2F26%2FGithub-Pages-Hexo-blog3%2F</url>
      <content type="text"><![CDATA[前言 通常我们讲的博客，分为两种：一种是以各大博客网站，例如新浪博客（不是指微博哦！）、网易博客、博客园、CSDN博客、简书等等，这些提供博客服务的网站，社区。另外一种是自己建站，搭载在服务器上并拥有域名的个人博客网站。如果拥有自己专属的网站，那是一件特别酷的事，很多人苦恼于如何建站，如何搭载服务器等等，如果有一种成型的网站框架，只需要我们简单的配置就能实现炫酷的效果，那就太方便了。下面就给大家介绍一款极其简单又功能齐全的博客框架： Hexo介绍Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装Hexo前提安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序： Node.js Git ——具体安装过程参照《Github Pages + Hexo搭建个人博客全攻略N0.2》 如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。进入安装的文件路径，命令行输入如下： cd D: $ npm install -g hexo-cli 建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 $ hexo init $ cd $ npm install 新建完成后，指定文件夹的目录如下： .├── _config.yml ————网站的 配置 信息，您可以在此配置大部分的参数。├── package.json————应用程序的信息。├── scaffolds ————模版文件夹。当您新建文章时，Hexo 会根据scaffold 来建立文件。├── source——-资源文件夹是存放用户资源的地方。除 posts 文件夹之外，开头命名为 (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。| ├── _drafts| └── _posts└── themes —————–主题 文件夹。Hexo 会根据主题来生成静态页面。 配置 可以在 _config.yml 中修改大部份的配置。参数 描述title ———————–网站标题subtitle ——————-网站副标题description ——————-网站描述author ———————–您的名字language ——————-网站使用的语言timezone ——————-网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。 其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。 命令注意：由于我们安装了Git和Github客户端，不建议在windows系统下的命令行器输入，可以选择Git版本下的 Git bash 或 Github客户端自带的 Git Shell 下进行 Hexo 命令输入 init $ hexo init [folder] 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。 new $ hexo new [layout] &lt;title&gt; 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。 generate、server、deploy $ hexo g ———–生成静态文件 $ hexo s ———–启动本地服务器，浏览器器输入localhost:4000/ $ hexo d ———–文件生成后立即部署网站 （如果解析了Github Pages的域名地址，输入域名可看） 关于主题创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构： .├── _config.yml├── languages├── layout├── scripts└── source 关于 Hexo 的配置详细请看 Hexo官方文档 NeXt主题当下载完 Hexo 框架后，生成博客后应该不少人会吐槽默认的主题风格吧！确实是太恶心、恶心、恶心、恶心了，于是更换博客主题变得十分重要，就像我们手机的壁纸一样，主题可是我们博客的门面啊！！！下面介绍 NeXt 这个主题：…………………………..原谅我写到这里已经很累了!!详细请大家查看 NeXt官方文档]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[三大框架之 Struts2]]></title>
      <url>%2F2017%2F02%2F23%2FStruts%2F</url>
      <content type="text"><![CDATA[框架框架，软件的半成品，项目开发，可以在框架基础上进行，提高开发效率！框架，都会预先实现一些通用功能，使用框架直接应用这些通用功能而不用重新实现！框架在项目分层中作用： Struts 2框架基于MVC模式的应用层框架技术！ Struts2主要是通过Action动作类，处理请求！ (与传统的servlet开发相比，只需要写Action类即可！用Action取代之前的servlet开发！) (Struts是对servletApi进行的封装！) Struts2功能的引入，是通过核心过滤器完成的! 如果想用struts的任何功能，必须经过核心过滤器！(被过滤器拦截！) (struts提供的标签的访问，要先经过核心过滤器！) 搭载struts 2环境引入 jar 包struts2-core-2.3.4.1.jar struts核心功能 xwork-core-2.3.4.1.jar webwork核心功能 ognl-3.0.5.jar Ognl表达式语言支持 commons-fileupload-1.2.2.jar struts对文件上传的支持 commons-io-2.0.1.jar commons-lang3-3.1.jar 对java.lang包的扩展! freemarker-2.3.19.jar 标签库模板 javassist-3.11.0.GA.jar struts对字节码处理！ web.xml配置核心过滤器核心过滤器：StrutsPrepareAndExecuteFilter 写Action类Struts提供了一些功能，方便开发！例如：文件上传、请求数据封装！ 封装请求数据，方式1： **register.jsp** &lt;body&gt; &lt;form action=&quot;${pageContext.request.contextPath }/register.action&quot; method=&quot;post&quot;&gt; 注册用户：&lt;input type=&quot;text&quot; name=&quot;userName&quot;&gt; &lt;br/&gt; 注册密码：&lt;input type=&quot;text&quot; name=&quot;pwd&quot;&gt; &lt;br/&gt; &lt;input type=&quot;submit&quot; value=&quot;注册!&quot;&gt; &lt;/form&gt; &lt;/body&gt; **RegisterAction** public class UserAction extends ActionSupport { // 封装请求数据，方式1： private String userName; // request.getParameter(“userName”) // 把值作为方法参数传入！ public void setUserName(String userName) { this.userName = userName; } private String pwd; public void setPwd(String pwd) { this.pwd = pwd; } @Override public String execute() { System.out.println(userName + &quot;\t&quot; + pwd); return &quot;success&quot;; } } struts.xml配置&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt; &lt;!DOCTYPE struts PUBLIC &quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot; &quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;&gt; &lt;!--配置包 --&gt; &lt;package name=&quot;config&quot; namespace=&quot;/user&quot; extends=&quot;struts-default&quot;&gt; &lt;!-- 配置Action --&gt; &lt;action name=&quot;user&quot; class=&quot;cn.itcast.b_config.UserAction&quot; method=&quot;execute&quot;&gt; &lt;result name=&quot;success&quot; type=&quot;redirect&quot;&gt;/index.jsp&lt;/result&gt; &lt;/action&gt; &lt;/package&gt; &lt;/struts&gt; &lt;struts&gt; package 包，作用： 管理action或管理路径的作用!name 表示包名称！ 作用，被其他包继承！ 包名不能重复！当前包表必须继承struts-default包！abstract=”true” 抽象包中不能有action配置！主要被其他包继承的！namespace 名称空间，管理路径！作为路径的一部分！默认值：/访问路径 = namespace + actionName action 节点作用： 配置访问路径，与，处理action类的映射关系！name: 与名称空间共同组成访问路径！class: 处理action类的全名!method: 当前请求的处理方法! 如果不写，默认是execute!result 子节点 作用： action类的业务处理方法的返回的跳转标记，与跳转页面的映射关系！name: action类中方法返回的Stringtype: 表示跳转的类型！ (可写值的定义，在struts-default.xml中！)默认是:dispatcher， 为转发！dispacher 默认值；转发redirect 重定向标签体中可以指定跳转的页面！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[JDBC究竟是什么东西？]]></title>
      <url>%2F2017%2F02%2F20%2FJDBC%2F</url>
      <content type="text"><![CDATA[JDBC初识什么是 JDBC ?JBDC概述： JBDC(Java Database Connectivity)是一种用于执行SQL语句的Java API,可以为多种关系型数据库提供统一的访问，它由一组Java语言编写的类和接口组成。JDBC提供了一种基准，据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。使用java代码操作数据库的技术。dbc一句话概述： 使用java语言发送sql语句。 JDBC连接模式java程序 —–&gt; jdbc接口 —–&gt; jdbc的实现类（数据库厂商提供）jdbc接口：是Sun公司制定的一套java程序操作不同数据库的接口。 jdbc接口： java.sql.* 低版本 javax.sql.* 扩展版本 JDBC开发步骤注册驱动程序（告诉java程序连接哪个数据库） 获取数据库连接 创建Statement或者PreparedStatement或CallableStatement 执行sql语句 处理结果 关闭连接 JDBC api体系简介java.sql.Driver: 驱动程序接口 (具体的实现由数据库厂商提供) mysql: com.mysql.jdbc.Driver oracle：oracle.jdbc.driver.OracleDriver java.sql.Connection: 连接数据库的接口 (具体的实现由数据库厂商提供) Statement createStatement(): 创建Statement接口的实例 PreparedStatement prepareStatement(String sql):创建 PreparedStatement接口的实例 CallableStatement prepareCall(String sql) : 创建CallableStatement 接口的实例 java.sql.Statement接口： 用于执行静态 SQL 语句并返回结果的对象。(实现由数据库厂商提供) int executeUpdate(String sql) ：执行更新的sql语句（DDL+DML） (DDL: create/alter/drop DML: insert/update/delete) ResultSet executeQuery(String sql) :执行查询的sql语句（DQL） （DQL:select） java.sql.PreparedStatement接口：用于执行预编译的sql语句并返回结果的对象。 int executeUpdate() ：执行更新sql语句 ResultSet executeQuery() ：执行查询sql语句 java.sql.CallableStatement接口： 用于执行存储过程并返回结果的对象。 ResultSet executeQuery() ：执行查询sql语句 java.sql.ResultSet接口： 用于封装数据库的查询结果的对象 next(): 将光标移动到下一条记录 getObject(): 取出当前行的数据 Statement进行DDLpublic class Demo1 { //数据库的连接的URL private static String url = &quot;jdbc:mysql://localhost:3306/day17&quot;; //数据库用户名 private static String user = &quot;root&quot;; //数据库密码 private static String password = &quot;root&quot;; public static void main(String[] args){ Connection conn = null; Statement stmt = null; try { //1.驱动驱动程序 Class.forName(&quot;com.mysql.jdbc.Driver&quot;); //2.从驱动程序管理类获取连接 conn = DriverManager.getConnection(url, user, password); //3.通过Connection对象获取Statement对象 stmt = conn.createStatement(); //4.准备sql语句 String sql = &quot;CREATE TABLE student(id INT PRIMARY KEY AUTO_INCREMENT,NAME VARCHAR(20),gender VARCHAR(2))&quot;; //5.执行sql语句，返回结果 int count = stmt.executeUpdate(sql); System.out.println(&quot;影响了&quot;+count+&quot;行&quot;); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(e); } finally{ //6.关闭资源（先关闭statement，再关闭connection） if(stmt!=null) try { stmt.close(); } catch (SQLException e) { e.printStackTrace(); throw new RuntimeException(e); } if(conn!=null) try { conn.close(); } catch (SQLException e) { e.printStackTrace(); throw new RuntimeException(e); } } } } PreparedStatement操作SQL语句public class Demo1 { /** * 插入操作 */ @Test public void test1(){ Connection conn = null; PreparedStatement stmt = null; try{ //获取连接 conn = JdbcUtil.getConnection(); String sql = &quot;INSERT INTO student(NAME,gender) VALUES(?,?)&quot;; //预编译sql：使用？号代替参数值。一个？号代表一个参数值 //创建PreparedStatement对象,执行预编译的sql语句 stmt = conn.prepareStatement(sql); //设置参数 /** * 参数一： 参数位置。从1开始 * 参数二： 参数实际值 * 注意： 所有参数必须要赋值 */ stmt.setString(1, &quot;rose&quot;); stmt.setString(2, &quot;女&quot;); //发送参数，执行sql语句 int count = stmt.executeUpdate(); System.out.println(count); }catch(Exception e){ e.printStackTrace(); throw new RuntimeException(e); }finally{ //关闭资源 JdbcUtil.close(conn, stmt, null); } } Statement 与 PreparedStatement 对比一、语法结构不同 Statment执行静态sql语句，且sql可以拼接。 PreparedStatement可以先执行预编译的sql语句，在预编译sql语句中使用？进行参数占位，后面 二、原理不同 Statement不能进行sql缓存 而PreparedStatement可以进行sql缓存，执行效率会比Statement快！！！ 三、安全性不同 Statement存在sql注入的风险 而PreparedStatement可以有效防止用户注入。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[那么问题来了：Git 和 Github是什么鬼 ？？！]]></title>
      <url>%2F2017%2F02%2F17%2FGithub%2F</url>
      <content type="text"><![CDATA[什么是Git？首先，Git是一种版本管理系统/软件(百度百科)，是目前全世界最流行的分布式版本控制系统（好牛逼啊）。版本管理有 集中型 和 分散型 SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就呵呵了。 Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。 Git 创始人：Linux的创始人 Linus Torvalds 开发时间 ：公元2005 在Windows下安装Git后，在应用程序栏可以看到 Git BashGit Bash是作为一个应用程序添加进系统的，当启动Git Bash后，git命令就只能在 Git Bash 中使用，在 Windows 附属的命令提示符中则无法运行。 安装完成后，还需要最后一步设置，双击进入 Git Bash 在命令行输入如下： 什么是Github？Github 是为开发者提供Git 仓库的托管服务网站（也有客户端）。Github 的出现为开源世界带来了社会化编程的概念。这一概念影响了全世界众多的程序员，Github这一服务创造了社会化编程的概念。随着Github的出现，软件开发者们才真正意义上拥有了源代码。世界上任何人都可以比以前更加容易滴获取源代码，将其自由的更改并加以公开。 为什么需要社会化编程当今的ＩＴ业界已经没有了终身雇佣制，人才流动性日益增大。可以说，每个月我们都能在一些著名开发者博客中看到这种现象：月末刚发布“辞职了”的消息，月初就又“入职了”。 那么，如果您是程序员的面试官，两者这间您会选择哪一位呢？？ 能查看到以前所写代码的程序员 or 无法查看的程序员 精通最新软件的程序员 or 不精通的程序员 对语言或软件差异带来的不同文化有所理解的程序员 or 不理解的程序员 为了不成为后一种程序员，理解社会化编程和 Github 至关重要 Git ShellGit Shell是Github 客户端自带的shell 脚步命令器。使用Git Shell可以将本地的项目发布、部署到网上的Github。下图就是我在Git Shell启动本地 Hexo 服务。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Github Pages + Hexo搭建个人博客全攻略N0.2]]></title>
      <url>%2F2017%2F02%2F15%2FPages-Hexo-blog2%2F</url>
      <content type="text"><![CDATA[前言 本次操作是本地配置(windows)的重中之重，请各位一定要仔细，其中涉及到 Git客户端的安装 node.js安装 配置生成SSH Key（一种传输代码的方法，速度快安全。） 添加到Github 安装Git客户端git是版本管理的未来，Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。如果推荐这本Git中文教程。 要使用Git，需要安装它的客户端，推荐在Linux下使用Git，会比较方便。下载地址在这里：http://code.google.com/p/msysgit/downloads/lis 。其他系统的安装也可以参考官方的安装教程。 安装完成后，还需要最后一步设置，在命令行输入： $ git config --global user.name &quot;Your Name&quot; $ git config --global user.email &quot;email@example.com&quot; 安装Node.js下载 Node.js 安装包 （常规软件安装操作） 检测PATH环境变量是否配置了Node.js，点击开始 ==&gt; 运行 ==&gt; 输入”cmd” ==&gt; 输入命令”path”，输出如下结果： PATH=C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\python32\python;C:\MinGW\bin;C:\Program Files\GTK2-Runtime\lib;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files\nodejs\;C:\Users\rg\AppData\Roaming\npm 我们可以看到环境变量中已经包含了C:\Program Files\nodejs\检查Node.js版本: C:>node –versionv4.4.5 配置SSH keys和使用Github首先，什么是SSH?? SSH的英文全称是Secure SHell。通过使用SSH，你可以把所有传输的数据进行加密，这样“中间人”这种攻击方式就不可能实现了，而且也能够防止DNS和IP欺骗。还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输的速度。SSH有很多功能，它既可以代替telnet，又可以为ftp、pop、甚至ppp提供一个安全的“通道”。 当我们需要将本地的代码传输到Github上时，SSH keys就起到了一个安全传输的功能。（哈哈！是不是很神奇？！） 检查SSH keys的设置首先我们需要检查你电脑上现有的ssh key： $ cd ~/.ssh 如果显示“No such file or directory”，跳到第三步，否则继续。 备份和移除原来的ssh key设置因为已经存在key文件，所以需要备份旧的数据并删除： ls config id_rsa id_rsa.pub known_hosts mkdir key_backup cp id_rsa* key_backup rm id_rsa*` 生成新的SSH Key输入下面的代码，就可以生成新的key文件，我们只需要默认设置就好，所以当需要输入文件名的时候，回车就好。 $ ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot; Generating public/private rsa key pair. Enter file in which to save the key (/Users/ your_user_directory/.ssh/id_rsa):&lt;回车就好&gt; 然后系统会要你输入加密串（Passphrase）： Enter passphrase (empty for no passphrase):&lt;输入加密串&gt; Enter same passphrase again:&lt;再次输入加密串&gt; 最后看到ssh key success，就成功设置ssh key了. 添加SSH Key到GitHub在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。 用文本编辑工具打开id_rsa.pub文件，仔细查看上面保存的文件路径。如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。 在GitHub的主页上点击设置按钮： github account setting，进入设置后：点击SSH配置 选择SSH Keys项，把复制的内容粘贴进去，然后点击Add Key按钮即可： PS：如果需要配置多个GitHub账号，可以参看这个多个github帐号的SSH key切换，不过需要提醒一下的是，如果你只是通过这篇文章中所述配置了Host，那么你多个账号下面的提交用户会是一个人，所以需要通过命令git config --global --unset user.email删除用户账户设置，在每一个repo下面使用git config --local user.email &#39;你的github邮箱@mail.com&#39;命令单独设置用户账户信息 测试一下可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改： $ ssh -T git@github.com 如果是下面的反应： The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)? 不要紧张，输入yes就好，然后会看到： Hi &lt;em&gt;username&lt;/em&gt;! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 设置你的账号信息现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。 Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。 $ git config --global user.name &quot;你的名字&quot; $ git config --global user.email &quot;your_email@youremail.com&quot; 好了，你已经可以成功连接GitHub了。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Github Pages + Hexo搭建个人博客全攻略N0.1]]></title>
      <url>%2F2017%2F02%2F15%2FPages-Hexo-blog1%2F</url>
      <content type="text"><![CDATA[前言Github Pages 是 github 公司提供的免费的静态网站托管服务，用起来方便而且功能强大，不仅没有空间限制，还可以绑定自己的域名。在 Github Pages 首页上可以看到很多用 Github Pages 托管的网站，很漂亮。另外很多非常著名的公司和项目也都用这种方式来搭建网站，如微软和 twitter 的网站，还有 谷歌的 Material Design 图标 网站。 Github Pages有以下几个优点： 轻量级的博客系统，没有麻烦的配置 使用标记语言，比如Markdown 无需自己搭建服务器 根据Github的限制，对应的每个站有300MB空间 可以绑定自己的域名 当然他也有缺点： 使用Hexo，相当于静态页发布，适合博客，文档介绍等。 基于Git，很多东西需要动手，不像Wordpress有强大的后台 购买域名为什么购买域名要放在最先呢？！因为很多人搭载博客源于一时性起，容易半途而废，所以花钱买个域名起码能让自己有一种动力去坚持！！！ 提供域名购买的网站有很多，例如国外的Godaddy、国内的万网(被马云爸爸收购了) 快速开始账号注册用Github Page搭载博客，首先你得有个Gitbub账号（什么是Github??GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。GitHub 于 2008 年 4 月 10 日正式上线，除了 Git 代码仓库托管及基本的 Web 管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其注册用户已经超过350万，托管版本数量也是非常之多，其中不乏知名开源项目 Ruby on Rails、jQuery 等。） 以上源自 Baidu百科 登录Github网站,填写账号、邮箱、密码，点击注册。注册完成后，选择Free免费账号完成设置。 创建仓库点击New Repository,并且仓库名格式必须为 username.github.io,以后我们就可以使用http://username.github.io/这个域名来访问我们的项目。 在项目添加一个index.html文件，就可以生成为主页了。建一个项目网站的详细步骤在 Github Page创建网站 页面上 绑定域名有一个功能其实很重要，就是绑定自己的域名。想想如果有天 github 网站被依法和谐了，那怎么办？如果一开始就是用自己的域名，那就简单了，直接换一台服务器就好了。 绑定域名的具体的操作步骤在这里 。 DNS 设置的方式并不唯一，但也是大同小异，下面演示一下我自己的操作过程。我的 johnylin.com 这个域名是在 万网（阿里云） 上买的。 首先在 万网上进入&lt;我的域名服务&gt;，在&lt;域名列表&gt;中找到&lt;解析&gt; 添加 4个 A Record 指向 192.30.252.153 和 192.30.252.154 也就是设置成下图这样也就是添加了四个 A 记录，这样后面用 &quot;http://johnylin.com&quot; 或者 &quot;http://www.johnylin.com&quot; 就都可以指向 github pages 的服务器了。然后在你的gh-pages分支的根目录中创建一个CNAME文件 johnylin.com 这样操作结束，当然还要稍微等几个小时给 DNS 扩散。晚上做完上面的操作，第二天就可以登录网站了。 域名扫盲说实话，虽然明白什么是域名以及域名解析的原理，但是在实际的互联网环境中，域名的问题其实比理论上说的要复杂些。这里对一些概念稍作整理。 A（Address）记录是用来指定主机名（或域名）对应的IP地址记录。用户可以将该域名下的网站服务器指向到自己的web server上。同时也可以设置您域名的二级域名。 CNAME也被称为规范名字。这种记录允许您将多个名字映射到同一台计算机。 通常用于同时提供WWW和MAIL服务的计算机。例如，有一台计算机名为“host.mydomain.com”（A记录）。 它同时提供WWW和MAIL服务，为了便于用户访问服务。可以为该计算机设置两个别名（CNAME）：WWW和MAIL。 这两个别名的全称就是“www.mydomain.com”和“mail.mydomain.com”。实际上他们都指向“host.mydomain.com”。 同样的方法可以用于当您拥有多个域名需要指向同一服务器IP，此时您就可以将一个域名做A记录指向服务器IP然后将其他的域名做别名到之前做A记录的域名上，那么当您的服务器IP地址变更时您就可以不必麻烦的一个一个域名更改指向了 只需要更改做A记录的那个域名其他做别名的那些域名的指向也将自动更改到新的IP地址上了。 TTLTTL值全称是“生存时间（Time To Live)”，简单的说它表示DNS记录在DNS服务器上缓存时间。要理解TTL值，请先看下面的一个例子：假设，有这样一个域名myhost.cnMonkey.com（其实，这就是一条DNS记录，通常表示在abc.com域中有一台名为myhost的主机）对应IP地 址为1.1.1.1，它的TTL为10分钟。这个域名或称这条记录存储在一台名为dns.cnMonkey.com的DNS服务器上。现在有一个用户键入一下地址（又称URL）：http://myhost.cnMonkey.com 这时会发生什么呢？该 访问者指定的DNS服务器（或是他的ISP,互联网服务商, 动态分配给他的)8.8.8.8就会试图为他解释myhost.cnMonkey.com，当然8.8.8.8这台DNS服务器由于没有包含 myhost.cnMonkey.com这条信息，因此无法立即解析，但是通过全球DNS的递归查询后，最终定位到dns.cnMonkey.com这台DNS服务器， dns.cnMonkey.com这台DNS服务器将myhost.cnMonkey.com对应的IP地址1.1.1.1告诉8.8.8.8这台DNS服务器，然有再由 8.8.8.8告诉用户结果。8.8.8.8为了以后加快对myhost.cnMonkey.com这条记录的解析，就将刚才的1.1.1.1结果保留一段时间，这 就是TTL时间，在这段时间内如果用户又有对myhost.cnMonkey.com这条记录的解析请求，它就直接告诉用户1.1.1.1，当TTL到期则又会重复 上面的过程。 域名分级子域名是个相对的概念，是相对父域名来说的。域名有很多级，中间用点分开。例如中国国家顶级域名CN，所有以 CN 结尾的域名便都是它的子域。例如：www.zzy.cn 便是 zzy.cn 的子域，而 zzy.cn 是 cn 的子域。 “二级域名”：目前有很多用户认为“二级域名”是自己所注册域名的下一级域名，实际上这里所谓的“二级域名”并非真正的“二级”，而应该称为“次级”(相对次级) 例如您注册的域名是abc.cn来说：CN为顶级域，abc.cn为二级域，www.abc.cn、mail.abc.cn、help.zzy.cn为三级域。还有一些特殊的二级域被用来作顶级域使用，例如：com.cn、net.cn、org.cn、gov.cn（包括地区域名bj.cn、fj.cn等）。那么此时用户所注册的就应该是三级域了，例如114.com.cn。（备注：www.gov.cn实际上是以gov.cn为后缀的www域名，就是说如果您在域名Whois信息查询中输入gov.cn是查询不到注册信息的因为gov.cn是作为顶级域来使用的域名后缀，真正开放注册的是www.gov.cn）。然而当前有很多用户还是习惯地将可以允许用户注册的域名称为顶级域名，而所注册域名的下一级域名称为“二级域名”，其实从严格意义上来讲这是不对的，所以我们前面会说“子域名”、“二级域名”是相对的概念，准确的应该称为“次级域名”。 《域名扫盲》引用自 EZLippi]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[58个国内外优质网站]]></title>
      <url>%2F2017%2F02%2F08%2F2017-02-08-58%E4%B8%AA%E4%BC%98%E8%B4%A8%E7%BD%91%E7%AB%99%2F</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[About Me]]></title>
      <url>%2F2016%2F06%2F11%2Fabout%2F</url>
      <content type="text"><![CDATA[Personal introduction Mr.林锐忠 Java 开发、前端开发、微信开发爱好者。 潮汕人（爱拼才会赢） 现居广州，就读于广东技术师范学院 虽然专业是计算机师范，但是不想当成功的IT工程师不是好的老师。 别人眼里的优雅、诗意在我看来都是TM什么玩意？！ Find me here… 微博联系我 知乎联系我 github联系我 欢迎调戏微信: dearpear_lin邮箱: ruijohn2013@163.com About this site个人经验浅谈、侃侃技术、分享交流、记录生活。]]></content>
    </entry>

    
  
  
</search>
